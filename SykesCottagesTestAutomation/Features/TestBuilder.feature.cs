// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SykesCottagesTestAutomation.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("TestBuilder")]
    public partial class TestBuilderFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "TestBuilder.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "TestBuilder", "\tTests to help with writing more tests", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get all headers on the page")]
        [NUnit.Framework.CategoryAttribute("TestBuilder")]
        public void GetAllHeadersOnThePage()
        {
            string[] tagsOfScenario = new string[] {
                    "TestBuilder"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get all headers on the page", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 5
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
 testRunner.Given("I am on the following webpage: https://www.sykescottages.co.uk/letyourcottage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 7
 testRunner.Then("I store all headers on the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get all links on the page")]
        [NUnit.Framework.CategoryAttribute("TestBuilder")]
        public void GetAllLinksOnThePage()
        {
            string[] tagsOfScenario = new string[] {
                    "TestBuilder"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get all links on the page", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 10
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 11
 testRunner.Given("I am on the following webpage: https://www.sykescottages.co.uk/letyourcottage/sea" +
                        "rch/?searchTerm=th", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 12
 testRunner.Then("I store all links on the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get all images on the page")]
        [NUnit.Framework.CategoryAttribute("TestBuilder")]
        public void GetAllImagesOnThePage()
        {
            string[] tagsOfScenario = new string[] {
                    "TestBuilder"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get all images on the page", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 15
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 16
 testRunner.Given("I am on the following webpage: https://www.sykescottages.co.uk/letyourcottage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 17
 testRunner.Then("I store all images on the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get the header of the page")]
        [NUnit.Framework.CategoryAttribute("TestBuilder")]
        public void GetTheHeaderOfThePage()
        {
            string[] tagsOfScenario = new string[] {
                    "TestBuilder"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get the header of the page", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 20
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 21
 testRunner.Given("I am on the following webpage: https://www.sykescottages.co.uk/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
                TechTalk.SpecFlow.Table table111 = new TechTalk.SpecFlow.Table(new string[] {
                            "WebPage"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/about-us"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/a-guide-to-buying-a-holiday-let"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/are-holiday-homes-a-good-investment"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/benefits-short-term-letting"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/building-holiday-let"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/buying-a-holiday-home"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/buy-own-sell-holiday-lets"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/capital-gains-tax"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/cottage-owner"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/damage-protection-terms"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/e-i-l"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/expert-guide-to-advertise-your-holiday-home"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/farm-diversification-holiday-letting"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/furnished-holiday-let-tax-guide"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/holiday-chalet-letting-business"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/holiday-cottage-rates"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/holiday-home-cleaning"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/holiday-home-finance"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/holiday-home-taxes"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/holiday-let-agency"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/holiday-let-business-success"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/holiday-let-investment"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/holiday-let-marketing"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/holiday-let-mortgage-information"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/holiday-let-mortgages"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/holiday-let-mortgages-a-complete-guide"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/holiday-letting-getting-started"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/holiday-letting-information"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/holiday-letting-rules"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/holiday-management-services"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/how-to-run-your-holiday-let"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/investment-advice-for-holiday-lets"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/leading-holiday-let-agency"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/legal-regulations-for-holiday-lets"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/letting-a-log-cabin"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/make-the-switch"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/marketing-your-holiday-let"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/n-t-l"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/regulations-for-holiday-lets"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/renting-out-your-property"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/run-holiday-let-as-business"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/running-your-holiday-let"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/shepherd-huts-for-holiday-lets"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/Stamp-Duty-On-Holiday-Lets"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/Tax-information-on-holiday-lets"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/t-o-b"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/video-test-let-agency"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/welcome-gift"});
                table111.AddRow(new string[] {
                            "letyourcottage/information/welcome-gift-terms"});
#line 22
 testRunner.Then("I store the header on the following pages", ((string)(null)), table111, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Build a test that checks all headers on the page")]
        [NUnit.Framework.CategoryAttribute("TestBuilder")]
        public void BuildATestThatChecksAllHeadersOnThePage()
        {
            string[] tagsOfScenario = new string[] {
                    "TestBuilder"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Build a test that checks all headers on the page", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 75
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 76
 testRunner.Given("I am on the following webpage: https://www.sykescottages.co.uk/letyourcottage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 77
 testRunner.Then("I store the headers and output a test script", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Build a test that checks all links on the page")]
        [NUnit.Framework.CategoryAttribute("TestBuilder")]
        public void BuildATestThatChecksAllLinksOnThePage()
        {
            string[] tagsOfScenario = new string[] {
                    "TestBuilder"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Build a test that checks all links on the page", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 80
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 81
 testRunner.Given("I am on the following webpage: https://sykes:1.sykes@lyp238dedicatedfaqpa.dev.syk" +
                        "escottages.co.uk/letyourcottage/holiday-let-owner-information/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 82
 testRunner.Then("I store the links and output a test script", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Build a test that checks all images on the page")]
        [NUnit.Framework.CategoryAttribute("TestBuilder")]
        public void BuildATestThatChecksAllImagesOnThePage()
        {
            string[] tagsOfScenario = new string[] {
                    "TestBuilder"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Build a test that checks all images on the page", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 85
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 86
 testRunner.Given("I am on the following webpage: https://www.sykescottages.co.uk/letyourcottage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 87
 testRunner.Then("I store the images and output a test script", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
